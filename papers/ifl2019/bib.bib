1@inproceedings{Viera:2009:AGF:1596550.1596586,
 author = {Viera, Marcos and Swierstra, S. Doaitse and Swierstra, Wouter},
 title = {{Attribute Grammars Fly First-class: How to Do Aspect Oriented Programming in Haskell}},
 booktitle = {Proceedings of the 14th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '09},
 year = {2009},
 isbn = {978-1-60558-332-7},
 location = {Edinburgh, Scotland},
 pages = {245--256},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1596550.1596586},
 doi = {10.1145/1596550.1596586},
 acmid = {1596586},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {HList, Haskell, attribute grammars, class system, lazy evaluation, type-level programming},
} 

@inproceedings{Kiselyov:2004:STH:1017472.1017488,
 author = {Kiselyov, Oleg and L\"{a}mmel, Ralf and Schupke, Keean},
 title = {Strongly Typed Heterogeneous Collections},
 booktitle = {Proceedings of the 2004 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '04},
 year = {2004},
 isbn = {1-58113-850-4},
 location = {Snowbird, Utah, USA},
 pages = {96--107},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1017472.1017488},
 doi = {10.1145/1017472.1017488},
 acmid = {1017488},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collections, dependently typed programming, extensible records, haskell, type equality, type improvement, type-indexed rows, type-safe database access},
} 



@article{Hall:1996:TCH:227699.227700,
 author = {Hall, Cordelia V. and Hammond, Kevin and Peyton Jones, Simon L. and Wadler, Philip L.},
 title = {Type Classes in Haskell},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {March 1996},
 volume = {18},
 number = {2},
 month = mar,
 year = {1996},
 issn = {0164-0925},
 pages = {109--138},
 numpages = {30},
 url = {http://doi.acm.org/10.1145/227699.227700},
 doi = {10.1145/227699.227700},
 acmid = {227700},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Haskell, functional programming, type classes, types},
} 


@inproceedings{DBLP:conf/esop/Jones00,
  author    = {Mark P. Jones},
  title     = {Type Classes with Functional Dependencies},
  booktitle = {{ESOP}},
  series    = {Lecture Notes in Computer Science},
  volume    = {1782},
  pages     = {230--244},
  publisher = {Springer},
  year      = {2000}
}

@INPROCEEDINGS{Hallgren00funwith,
    author = {Thomas Hallgren},
    title = {Fun with Functional Dependencies},
    booktitle = {Proc. of the Joint CS/CE Winter Meeting},
    year = {2000}
}

@article{parker:tlii,
	Author = {Conrad Parker},
	Journal = {The Monad.Reader},
	Month = {September},
	Title = {{Type-Level Instant Insanity}},
	Volume = {Issue Eight},
	Year = {2007}
}

@misc{OlegSKI,
  Author = {Oleg Kiselyov},
  title = {{Type-level call-by-value lambda-calculator in three lines}},
  howpublished = {http://okmij.org/ftp/Computation/lambda-calc.html},
  note = {Accedido: 28-5-2018}
}


@inproceedings{Yorgey:2012:GHP:2103786.2103795,
 author = {Yorgey, Brent A. and Weirich, Stephanie and Cretin, Julien and Peyton Jones, Simon and Vytiniotis, Dimitrios and Magalh\~{a}es, Jos{\'e} Pedro},
 title = {{Giving Haskell a Promotion}},
 booktitle = {Proceedings of the 8th ACM SIGPLAN Workshop on Types in Language Design and Implementation},
 series = {TLDI '12},
 year = {2012},
 isbn = {978-1-4503-1120-5},
 location = {Philadelphia, Pennsylvania, USA},
 pages = {53--66},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2103786.2103795},
 doi = {10.1145/2103786.2103795},
 acmid = {2103795},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {haskell, kinds, polymorphism, promotion},
} 



@article{Lindley:2013:HPP:2578854.2503786,
 author = {Lindley, Sam and McBride, Conor},
 title = {Hasochism: The Pleasure and Pain of Dependently Typed Haskell Programming},
 journal = {SIGPLAN Not.},
 issue_date = {December 2013},
 volume = {48},
 number = {12},
 month = sep,
 year = {2013},
 issn = {0362-1340},
 pages = {81--92},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2578854.2503786},
 doi = {10.1145/2578854.2503786},
 acmid = {2503786},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data type promotion, dependent types, invariants, proof search, singletons},
} 


@misc{libsingleton,
  Author = {R. Eisenberg et al},
  title = {{singletons Library}},
  howpublished = {http://hackage.haskell.org/package/singletons},
}

@misc{ExpressionProblem,
  Author = {P. Wadler},
  title = {{The expression problem, mailing list discussion}},
  howpublished = {http://homepages.inf.ed.ac.uk/wadler/papers/expression/expression.txt},
  note = {Accedido: 28-8-2018}
}

@misc{HColsWiki,
  Author = {Haskell Wiki},
  title = {{Heterogeneus collections}},
  howpublished = {https://wiki.haskell.org/Heterogenous\textunderscore collections},
  note = {Accedido: 31-10-2018}
}


@article{McBride2002FakingIS,
  title={Faking it: Simulating dependent types in Haskell},
  author={Conor McBride},
  journal={J. Funct. Program.},
  year={2002},
  volume={12},
  pages={375-392}
}

@INPROCEEDINGS{Knuth68semanticsof,
    author = {Donald E. Knuth},
    title = {Semantics of Context-Free Languages},
    booktitle = {In Mathematical Systems Theory},
    year = {1968},
    pages = {127--145}
}

@article{birdRepmin,
author = {Bird, Richard},
year = {1984},
month = {10},
pages = {239-250},
title = {Using circular programs to eliminate multiple traversals of data. {Acta Inform√°tica}},
volume = {21},
booktitle = {Acta Informatica}
}

@Inproceedings{type-classes-an-exploration-of-the-design-space,
author = {Peyton Jones, Simon and Jones, Mark and Meijer, Erik},
title = {Type classes: an exploration of the design space},
booktitle = {Haskell workshop},
year = {1997},
month = {January},
abstract = {When type classes were first introduced in Haskell they were regarded as a fairly experimental language feature, and therefore warranted a fairly conservative design. Since that time, practical experience has convinced many programmers of the benefits and convenience of type classes. However, on occasion, these same programmers have discovered examples where seemingly natural applications for type class overloading are prevented by the restrictions imposed by the Haskell design.

It is possible to extend the type class mechanism of Haskell in various ways to overcome these limitations, but such proposals must be designed with great care. For example, several different extensions have been implemented in Gofer. Some of these, particularly the support for multi-parameter classes, have proved to be very useful, but interactions between other aspects of the design have resulted in a type system that is both unsound and undecidable. Another illustration is the introduction of constructor classes in Haskell 1.3, which came without the proper generalization of the notion of a context. As a consequence, certain quite reasonable programs are not typable.

In this paper we review the rationale behind the design of Haskell's class system, we identify some of the weaknesses in the current situation, and we explain the choices that we face in attempting to remove them.},
url = {https://www.microsoft.com/en-us/research/publication/type-classes-an-exploration-of-the-design-space/},
edition = {Haskell workshop},
}


@inproceedings{Silva:2006:STR:1159842.1159846,
 author = {Silva, Alexandra and Visser, Joost},
 title = {Strong Types for Relational Databases},
 booktitle = {Proceedings of the 2006 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '06},
 year = {2006},
 isbn = {1-59593-489-8},
 location = {Portland, Oregon, USA},
 pages = {25--36},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1159842.1159846},
 doi = {10.1145/1159842.1159846},
 acmid = {1159846},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Haskell, SQL, functional dependency theory, relational databases, type-level programming},
}


@inproceedings{Bird:1996:AP:256095.256116,
 author = {Bird, Richard and de Moor, Oege},
 title = {The Algebra of Programming},
 booktitle = {Proceedings of the NATO Advanced Study Institute on Deductive Program Design},
 year = {1996},
 isbn = {3-540-60947-4},
 location = {Marktoberdorf, Germany},
 pages = {167--203},
 numpages = {37},
 url = {http://dl.acm.org/citation.cfm?id=256095.256116},
 acmid = {256116},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
} 


@inproceedings{Dijkstra:2009:AUH:1596638.1596650,
 author = {Dijkstra, Atze and Fokker, Jeroen and Swierstra, S. Doaitse},
 title = {{The Architecture of the Utrecht Haskell Compiler}},
 booktitle = {Proceedings of the 2Nd ACM SIGPLAN Symposium on Haskell},
 series = {Haskell '09},
 year = {2009},
 isbn = {978-1-60558-508-6},
 location = {Edinburgh, Scotland},
 pages = {93--104},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1596638.1596650},
 doi = {10.1145/1596638.1596650},
 acmid = {1596650},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {aspect orientation, attribute grammar, compiler architecture, haskell},
} 

@book{Aho:1986:CPT:6448,
 author = {Aho, Alfred V. and Sethi, Ravi and Ullman, Jeffrey D.},
 title = {Compilers: Principles, Techniques, and Tools},
 year = {1986},
 isbn = {0-201-10088-6},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@ARTICLE{Moor99first-classattribute,
    author = {Oege De Moor},
    title = {First-class Attribute Grammars},
    journal = {Informatica},
    year = {1999},
    volume = {24},
    pages = {2000}
}

@article{Chakravarty:2005:ATC:1047659.1040306,
 author = {Chakravarty, Manuel M. T. and Keller, Gabriele and Jones, Simon Peyton and Marlow, Simon},
 title = {Associated Types with Class},
 journal = {SIGPLAN Not.},
 issue_date = {January 2005},
 volume = {40},
 number = {1},
 month = jan,
 year = {2005},
 issn = {0362-1340},
 pages = {1--13},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1047659.1040306},
 doi = {10.1145/1047659.1040306},
 acmid = {1040306},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {associated types, self-optimising libraries, type classes, type-directed translation, type-indexed types},
}

@article{Chakravarty:2005:ATS:1090189.1086397,
 author = {Chakravarty, Manuel M. T. and Keller, Gabriele and Jones, Simon Peyton},
 title = {Associated Type Synonyms},
 journal = {SIGPLAN Not.},
 issue_date = {September 2005},
 volume = {40},
 number = {9},
 month = sep,
 year = {2005},
 issn = {0362-1340},
 pages = {241--253},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1090189.1086397},
 doi = {10.1145/1090189.1086397},
 acmid = {1086397},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {associated types, generic programming, type classes, type functions, type inference},
}

@inproceedings{Sulzmann:2007:SFT:1190315.1190324,
 author = {Sulzmann, Martin and Chakravarty, Manuel M. T. and Jones, Simon Peyton and Donnelly, Kevin},
 title = {{System F with Type Equality Coercions}},
 booktitle = {Proceedings of the 2007 ACM SIGPLAN International Workshop on Types in Languages Design and Implementation},
 series = {TLDI '07},
 year = {2007},
 isbn = {1-59593-393-X},
 location = {Nice, Nice, France},
 pages = {53--66},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1190315.1190324},
 doi = {10.1145/1190315.1190324},
 acmid = {1190324},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {advanced type features, typed intermediate language},
}

@article{Eisenberg:2012:DTP:2430532.2364522,
 author = {Eisenberg, Richard A. and Weirich, Stephanie},
 title = {Dependently Typed Programming with Singletons},
 journal = {SIGPLAN Not.},
 issue_date = {December 2012},
 volume = {47},
 number = {12},
 month = sep,
 year = {2012},
 issn = {0362-1340},
 pages = {117--130},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2430532.2364522},
 doi = {10.1145/2430532.2364522},
 acmid = {2364522},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependently typed programming, gadts, haskell, singletons},
}

@inproceedings{DBLP:conf/gcse/MoorPW99,
  author    = {Oege de Moor and
               Simon L. {Peyton Jones} and
               Eric Van Wyk},
  title     = {Aspect-Oriented Compilers},
  booktitle = {Generative and Component-Based Software Engineering, First International
               Symposium, GCSE'99, Erfurt, Germany, September 28-30, 1999, Revised
               Papers},
  pages     = {121--133},
  year      = {1999},
  url       = {https://doi.org/10.1007/3-540-40048-6\_10},
  doi       = {10.1007/3-540-40048-6\_10},
  timestamp = {Wed, 24 May 2017 15:40:43 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/gcse/MoorPW99},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@misc{libuuagc,
  Author = {Utrecht University},
  title = {{Attribute Grammar System of Universiteit Utrecht.}},
  howpublished = {http://hackage.haskell.org/package/uuagc},
}

@misc{libvinyl,
  Author = {Jonathan Sterling},
  title = {{vinyl: Extensible Records.}},
  howpublished = {http://hackage.haskell.org/package/vinyl},
}

@misc{libCTRex,
  Author = {Atze van der Ploeg},
  title = {{CTRex: Open records using closed type families.}},
  howpublished = {http://hackage.haskell.org/package/CTRex},
}

@article{Eisenberg:2014:CTF:2578855.2535856,
 author = {Eisenberg, Richard A. and Vytiniotis, Dimitrios and Peyton Jones, Simon and Weirich, Stephanie},
 title = {Closed Type Families with Overlapping Equations},
 journal = {SIGPLAN Not.},
 issue_date = {January 2014},
 volume = {49},
 number = {1},
 month = jan,
 year = {2014},
 issn = {0362-1340},
 pages = {671--683},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2578855.2535856},
 doi = {10.1145/2578855.2535856},
 acmid = {2535856},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {haskell, system fc, type families, type-level computation},
}


@misc{ghcman,
  Author = {GHC Team},
  title = {{GHC Users Guide Documentation.}},
  url = {http://doi.acm.org/10.1145/2578855.2535856},
}

@article{Sheard:2002:TMH:636517.636528,
 author = {Sheard, Tim and Jones, Simon Peyton},
 title = {{Template Meta-programming for Haskell}},
 journal = {SIGPLAN Not.},
 issue_date = {December 2002},
 volume = {37},
 number = {12},
 month = dec,
 year = {2002},
 issn = {0362-1340},
 pages = {60--75},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/636517.636528},
 doi = {10.1145/636517.636528},
 acmid = {636528},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Meta programming, templates},
} 


@article{gadts,
  author = {Augustsson, Lennart and Petersson, Kent},
  year = {1994},
  month = {09},
  pages = {},
  title = {{Silly Type Families}}
}

@inproceedings{Cheney2003FirstClassPT,
  title={First-Class Phantom Types},
  author={James Cheney and Ralf Hinze},
  year={2003}
}

@inproceedings{Xi:2003:GRD:604131.604150,
 author = {Xi, Hongwei and Chen, Chiyan and Chen, Gang},
 title = {Guarded Recursive Datatype Constructors},
 booktitle = {Proceedings of the 30th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '03},
 year = {2003},
 isbn = {1-58113-628-5},
 location = {New Orleans, Louisiana, USA},
 pages = {224--235},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/604131.604150},
 doi = {10.1145/604131.604150},
 acmid = {604150},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {guarded recursive datatype constructors},
} 